/**
 *
 * $Id$
 */
package org.enterprisedomain.classmaker.validation;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.EMap;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.resource.Resource;
import org.enterprisedomain.classmaker.Customizer;
import org.enterprisedomain.classmaker.Revision;
import org.enterprisedomain.classmaker.StageQualifier;
import org.enterprisedomain.classmaker.Strategy;

/**
 * A sample validator interface for
 * {@link org.enterprisedomain.classmaker.State}. This doesn't really do
 * anything, and it's not a real EMF artifact. It was generated by the
 * org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
 * code generator can be extended. This can be disabled with -vmargs
 * -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface StateValidator {
	boolean validate();

	boolean validatePackageClassName(String value);

	boolean validateEditPluginClassName(String value);

	boolean validateEditorPluginClassName(String value);

	boolean validateRequiredPlugins(EList<String> value);

	boolean validateRevision(Revision value);

	boolean validateTimestamp(long value);

	boolean validateDeployableUnitName(String value);

	boolean validateEditDeployableUnitName(String value);

	boolean validateEditorDeployableUnitName(String value);

	boolean validateJobFamily(String value);

	boolean validateResource(Resource value);

	boolean validateCommitIds(EList<String> value);

	boolean validateCommitId(String value);

	boolean validateStateCustomizers(EMap<StageQualifier, Customizer> value);

	boolean validateNonExclusiveStateCustomizers(EMap<StageQualifier, Customizer> value);

	boolean validateProjectName(String value);

	boolean validateMaking(boolean value);

	boolean validateEdit(boolean value);

	boolean validateEditor(boolean value);

	boolean validateStrategy(Strategy value);

	boolean validateExcludedEPackages(EList<EPackage> value);
}
